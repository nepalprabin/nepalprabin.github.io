---
title: "Chat Integration in Quarto"
format: html
---

## Interactive Chat

This section demonstrates how to integrate a simple chat interface into your Quarto document.

```{=html}
<div id="chat-display" style="border: 1px solid #ccc; height: 300px; overflow-y: scroll; padding: 10px; margin-bottom: 10px;"></div>
<input type="text" id="user-input" style="width: 80%; padding: 5px;">
<button id="send-button" style="width: 18%; padding: 5px;">Send</button>

<script>
    const chatDisplay = document.getElementById('chat-display');
    const userInput = document.getElementById('user-input');
    const sendButton = document.getElementById('send-button');

    sendButton.addEventListener('click', async () => {
      const message = userInput.value;
      if (message.trim() === '') return;

      chatDisplay.innerHTML += `<p><strong>You:</strong> ${message}</p>`;
      userInput.value = '';
      chatDisplay.scrollTop = chatDisplay.scrollHeight;

      try {
        const response = await fetch('https://blog-chatbot-bgqr.onrender.com/chat', { // Replace with your API endpoint
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ query: message }),
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        chatDisplay.innerHTML += `<p><strong>Bot:</strong> ${data.response}</p>`;
        chatDisplay.scrollTop = chatDisplay.scrollHeight;
      } catch (error) {
        console.error('Error:', error);
        chatDisplay.innerHTML += `<p><strong>Error:</strong> ${error.message || 'An error occurred.'}</p>`;
        chatDisplay.scrollTop = chatDisplay.scrollHeight;
      }
    });

    userInput.addEventListener("keyup", function(event) {
      if (event.keyCode === 13) {
        event.preventDefault();
        sendButton.click();
      }
    });
</script>